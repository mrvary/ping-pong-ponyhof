{
  "name": "ping-pong-ponyhof",
  "productName": "TTRace",
  "description": "A table tennis software for organizing tournaments. Based on the rules of the bavarian TT Race Tournament.",
  "version": "1.0.0",
  "homepage": "./",
  "main": "./src/electron/main.js",
  "author": "Team Ping Pong Ponyhof",
  "license": "MIT",
  "contributors": [
    "Felix Breitenbach",
    "Marco Goebel",
    "Daniel Niemczyk",
    "Sophia Dietze",
    "William Kistenberger"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/mrvary/ping-pong-ponyhof.git"
  },
  "scripts": {
    "pre-push": "yarn -s lint",
    "post-merge": "yarn",

    "start": "yarn build && yarn start-electron",
    "start-dev": "cross-env ELECTRON_START_URL=http://localhost:3000 CLIENT_START_URL=http://localhost:3001 yarn start-dev-parallel",
    "start-dev-mac": "cross-env ELECTRON_START_URL=http://localhost:3000 CLIENT_START_URL=http://localhost:3001 yarn start-dev-parallel-mac",
    "start-dev-parallel-mac": "cross-env BROWSER=none concurrently --kill-others \"yarn:start-react-app\" \"yarn:start-react-client\" \"wait-on ${ELECTRON_START_URL} ${CLIENT_START_URL} && yarn start-dev-electron-mac\"",
    "start-dev-parallel": "cross-env BROWSER=none concurrently --kill-others \"yarn:start-react-app\" \"yarn:start-react-client\" \"wait-on ${ELECTRON_START_URL} ${CLIENT_START_URL} && yarn start-dev-electron\"",
    "start-electron": "cross-env ELECTRON_IS_DEV=0 electron .",
    "start-dev-electron-mac": "cross-env NODE_ENV=dev electron .",
    "start-dev-electron": "cross-env NODE_ENV=dev nodemon --exec \"\"electron .\"\"",
    "start-react-app": "cross-env PORT=3000 react-scripts start",
    "start-react-client": "cd ./src/client && cross-env PORT=3001 yarn start",

    "start-simulation": "cd src/simulation && node testCompetition.js",

    "build": "yarn build-react-app && yarn build-react-client && yarn build-electron",
    "build-electron": "cross-env-shell \"yarn run reset-electron && mkdir ./build/src && mkdir ./build/src/client && cp -r src/electron/. build/src/electron && cp -r src/shared/. build/src/shared && cp -r src/client/build/. build/src/client && cp -r src/modules/. build/src/modules && cp -r src/assets/. build/src/assets && cp -r src/matchmaker/. build/src/matchmaker\"",
    "build-react-app": "react-scripts build",
    "build-react-client": "cd ./src/client && yarn build-client",
    "reset-electron": "cross-env-shell \"rm -rf build/src\"",
    
    "preelectron-pack": "yarn build",
    "electron-pack-win": "electron-builder build --win -c.extraMetadata.main=build/src/electron/main.js --publish never",
    "postinstall": "electron-rebuild electron-builder install-app-deps",
    "test": "jest",
    "electron-rebuild": "electron-rebuild",
    "lint": "prettier \"src/**/*.{js,css,html}\" --list-different && echo \"🌈 all files look fabulous!\" || (echo \"⚡️ please check the above files\" && exit 1)",
    "prettify-files": "prettier --write \"src/**/*.{js,css,html}\""
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "captain-git-hook": "^2.0.0",
    "concurrently": "^5.0.0",
    "cross-env": "^6.0.3",
    "electron": "^9.4.0",
    "electron-builder": "^21.2.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-rebuild": "^1.8.8",
    "nodemon": "^2.0.1",
    "prettier": "^1.19.1",
    "wait-on": "^3.3.0"
  },
  "dependencies": {
    "bootstrap": "^4.4.1",
    "dotenv": "^8.2.0",
    "electron-is-dev": "^1.1.0",
    "electron-log": "^3.0.9",
    "electron-reload": "^1.5.0",
    "express": "^4.17.1",
    "fast-xml-parser": "^3.16.0",
    "lowdb": "^1.0.0",
    "normalize.css": "^8.0.1",
    "react": "^16.12.0",
    "react-bootstrap": "^1.0.0-beta.16",
    "react-dom": "^16.12.0",
    "react-modal": "^3.11.1",
    "react-router-dom": "^5.1.2",
    "react-scripts": "^3.2.0",
    "reactjs-popup": "^1.5.0",
    "socket.io": "^2.3.0"
  },
  "build": {
    "appId": "de.fhws.ping-pong-ponyhof",
    "directories": {
      "buildResources": "assets"
    },
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "win": {
      "icon": "build/src/assets/icons/win/app-icon.ico"
    }
  },
  "jest": {
    "collectCoverage": true,
    "coverageReporters": [
      "html"
    ]
  }
}
